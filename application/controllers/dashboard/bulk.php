<?php if (!defined('BASEPATH')) exit('No direct script access allowed');class bulk extends CI_Controller{	function __construct()	{				parent::__construct();				$session_data = $this->session->userdata('admin_user');		if($session_data['admin_user_type_id']==2){			redirect('admin/dashboard');		}				if(!$this->session->userdata('admin_user'))    	{    		redirect('admin/login', 'refresh');    	}    	$this->load->model('emailtemplates_model');		$this->load->model('user_model');		$this->load->model('news_event_model');		$this->load->model('register_model');		$this->load->library('email');		//$this->load->model('city_model');	}		 		function send_bulk_email(){				$this->load->helper(array('form', 'url'));		$this->load->library('form_validation');				$data['email_template'] = $this->emailtemplates_model->GetEmailTemplates();		$data['exhibition_city'] = $this->news_event_model->getExhibitionAllCity();		//$data['online_registered_user'] = $this->register_model->GetEmailTemplates();				//echo '<pre>'; print_r($data['exhibition_city']); die;					$session_data = $this->session->userdata('admin_user');		    $data['username'] = $session_data['admin_username'];		    $header['main_page'] = 'send_bulk_email';		    $header['tab'] = 'bulk';		    $header['username'] =  $data['username'];		    $sidebar['page'] = 'send_bulk_email';		    $sidebar['main_page'] = 'send_bulk_email';		    $sidebar['username'] =  $data['username'];		    		    $footer['main_page'] = 'send_bulk_email';					 if($_SERVER['REQUEST_METHOD']=='POST')		 {			 			 $this->form_validation->set_rules('email_template', 'Email Template', 'required');								if($this->input->post('type')=='register user'){					$this->form_validation->set_rules('city', 'City', 'required');				}											if ($this->form_validation->run() == FALSE){								$this->load->view('admin/parts/header',$header);				$this->load->view('admin/parts/sidebar_left',$sidebar);				$this->load->view('admin/bulk_email/send_bulk_email',$data);				$this->load->view('admin/parts/footer',$footer);							}else{			 if($this->input->post('type') == "upload file"){				 				// echo "Test new"; die;				 $csvrecipients = '';				 $csv = '';				 					 if($_FILES['emailFile']['name']){						 							$new_csv_name = time()."_".strtolower(str_replace(" ","-",$_FILES["emailFile"]['name']));							//echo $new_csv_name; die;							$config['upload_path']   = './uploads/email_csv'; 							$config['file_name'] = $new_csv_name;							$config['allowed_types'] = '*'; 																												$this->load->library('upload', $config);							$this->upload->initialize($config);							if ( ! $this->upload->do_upload('emailFile')) {								//echo "Test"; die;								$error = array('error' => $this->upload->display_errors());								//echo '<pre>'; print_r($error); die;								$error_arr[] = $error['error']."(CSV)";							} else { 								//echo "Test1"; die;								$data_user = array('upload_data' => $this->upload->data());								$csv = "/uploads/email_csv/".$new_csv_name;							}														$arrFileName = explode('.',$_FILES['emailFile']['name']);						if($arrFileName[1] == 'csv'){							$handle = fopen($_FILES['emailFile']['tmp_name'], "r");												$i = 0;									 						 while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {										//print_r($data);						$num = count($data); 								if($i==0) { $i++; continue; }  // to exclude first row in the csv file.									 						// $recipients = '';						 for ($c=0; $c < $num; $c++) 						 {							  $col[$c] = $data[$c];							  $csvrecipients.= $col[$c].","; 								// $temp = false;						  }						} 						fclose($handle);											} 				}				//echo $csvrecipients; die;				if($csvrecipients !=""){										$email_history = array(						'email_template_id' => $this->input->post('email_template'),						'file' => $csv,						'created' => date('Y-m-d H:i:s'),											);										$insert_id = $this->emailtemplates_model->add_bulk_data($email_history);					$templateId = $this->input->post('email_template');					//echo $templateId; die;					$templateData = $this->emailtemplates_model->GetEmailTemplateByID($templateId);													$toU = $csvrecipients;					$fromU = $this->config->item('FromEmail');					$subjectU = $templateData->email_subject;					$messageU = $templateData->email_description;					$sendMailUser = $this->sendEmail($toU,$fromU,$subjectU,$messageU);										$this->session->set_flashdata('success', 'Email Sent successfully!.');					redirect('admin/email_template/send_bulk_email');								}else{										$this->session->set_flashdata('error', 'No any recepients found!');					redirect('admin/email_template/send_bulk_email');									}														 }elseif($this->input->post('type') == "register user"){								$cityId = $this->input->post('city');								$online_user_data = $this->register_model->get_online_register_user_by_city($cityId);				$city_user_data = $this->register_model->get_city_register_user_by_city($cityId);				//$exhibitior_user_data = $this->register_model->get_exhibitor_register_user_by_city($cityId);								$usersArr = array();				$users = '';								if(sizeof($online_user_data) > 0){										foreach($online_user_data as $online_user){						$usersArr[] = $online_user->email;					}				}								 if(sizeof($city_user_data) > 0){										foreach($city_user_data as $city_user){						$usersArr[] = $city_user->email;					}				}								/*if(sizeof($exhibitior_user_data) > 0){										foreach($exhibitior_user_data as $exhibitior_user){						$usersArr[] = $exhibitior_user->email;					}				} */			//	echo '<pre>'; print_r($usersArr); die;				if(sizeof($usersArr) > 0){					$usersArr = array_unique($usersArr);					$users = implode(',', $usersArr);					$userJson = json_encode($usersArr);				}								if($users !=""){									$email_history = array(						'email_template_id' => $this->input->post('email_template'),						'recipients' => $userJson,						'created' => date('Y-m-d H:i:s'),											);									$insert_id = $this->emailtemplates_model->add_bulk_data($email_history);																				$templateId = $this->input->post('email_template');					$templateData = $this->emailtemplates_model->GetEmailTemplateByID($templateId);					$toU = $users;					$fromU = $this->config->item('FromEmail');					$subjectU = $templateData->email_subject;					$messageU = $templateData->email_description;					//echo $messageU; die;					$sendMailUser = $this->sendEmail($toU,$fromU,$subjectU,$messageU);										$this->session->set_flashdata('success', 'Email Sent successfully!.');					redirect('admin/email_template/send_bulk_email');				}else{										$this->session->set_flashdata('error', 'No any recepients found!');					redirect('admin/email_template/send_bulk_email');				}								//echo '<pre>'; print_r($usersArr); die;			 }elseif($this->input->post('type') == "exhibitor"){								$cityId = $this->input->post('city');								//$online_user_data = $this->register_model->get_online_register_user_by_city($cityId);				//$city_user_data = $this->register_model->get_city_register_user_by_city($cityId);				$exhibitior_user_data = $this->register_model->get_exhibitor_register_user_by_city($cityId);								$usersArr = array();				$users = '';								/* if(sizeof($online_user_data) > 0){										foreach($online_user_data as $online_user){						$usersArr[] = $online_user->email;					}				}								if(sizeof($city_user_data) > 0){										foreach($city_user_data as $city_user){						$usersArr[] = $city_user->email;					}				} */								if(sizeof($exhibitior_user_data) > 0){										foreach($exhibitior_user_data as $exhibitior_user){						$usersArr[] = $exhibitior_user->email;					}				}			//	echo '<pre>'; print_r($usersArr); die;				if(sizeof($usersArr) > 0){					$usersArr = array_unique($usersArr);					$users = implode(',', $usersArr);					$userJson = json_encode($usersArr);				}								if($users !=""){								$email_history = array(						'email_template_id' => $this->input->post('email_template'),						'recipients' => $userJson,						'created' => date('Y-m-d H:i:s'),											);									$insert_id = $this->emailtemplates_model->add_bulk_data($email_history);																				$templateId = $this->input->post('email_template');					$templateData = $this->emailtemplates_model->GetEmailTemplateByID($templateId);					$toU = $users;					$fromU = $this->config->item('FromEmail');					$subjectU = $templateData->email_subject;					$messageU = $templateData->email_description;					//echo $messageU; die;					$sendMailUser = $this->sendEmail($toU,$fromU,$subjectU,$messageU);										$this->session->set_flashdata('success', 'Email Sent successfully!.');					redirect('admin/email_template/send_bulk_email');				}else{										$this->session->set_flashdata('error', 'No any recepients found!');					redirect('admin/email_template/send_bulk_email');				}								//echo '<pre>'; print_r($usersArr); die;			 }elseif($this->input->post('type') == "register exhibitor users"){								$cityId = $this->input->post('city');								$online_user_data = $this->register_model->get_online_register_user_by_city($cityId);				$city_user_data = $this->register_model->get_city_register_user_by_city($cityId);				$exhibitior_user_data = $this->register_model->get_exhibitor_register_user_by_city($cityId);								$usersArr = array();				$users = '';								if(sizeof($online_user_data) > 0){										foreach($online_user_data as $online_user){						$usersArr[] = $online_user->email;					}				}								if(sizeof($city_user_data) > 0){										foreach($city_user_data as $city_user){						$usersArr[] = $city_user->email;					}				}								if(sizeof($exhibitior_user_data) > 0){										foreach($exhibitior_user_data as $exhibitior_user){						$usersArr[] = $exhibitior_user->email;					}				}			//	echo '<pre>'; print_r($usersArr); die;				if(sizeof($usersArr) > 0){					$usersArr = array_unique($usersArr);					$users = implode(',', $usersArr);					$userJson = json_encode($usersArr);				}								if($users !=""){								$email_history = array(						'email_template_id' => $this->input->post('email_template'),						'recipients' => $userJson,						'created' => date('Y-m-d H:i:s'),											);									$insert_id = $this->emailtemplates_model->add_bulk_data($email_history);																				$templateId = $this->input->post('email_template');					$templateData = $this->emailtemplates_model->GetEmailTemplateByID($templateId);					$toU = $users;					$fromU = $this->config->item('FromEmail');					$subjectU = $templateData->email_subject;					$messageU = $templateData->email_description;					//echo $messageU; die;					$sendMailUser = $this->sendEmail($toU,$fromU,$subjectU,$messageU);										$this->session->set_flashdata('success', 'Email Sent successfully!.');					redirect('admin/email_template/send_bulk_email');				}else{										$this->session->set_flashdata('error', 'No any recepients found!');					redirect('admin/email_template/send_bulk_email');				}								//echo '<pre>'; print_r($usersArr); die;			 }						}		 		/* =========================================================== */			 		 }else{			 			$this->load->view('admin/parts/header',$header);			$this->load->view('admin/parts/sidebar_left',$sidebar);			$this->load->view('admin/bulk_email/send_bulk_email',$data);			$this->load->view('admin/parts/footer',$footer);			 }			  							}		function send_bulk_sms(){		$this->load->helper(array('form', 'url'));		$this->load->library('form_validation');				$data['exhibition_city'] = $this->news_event_model->getExhibitionAllCity();		//$data['online_registered_user'] = $this->register_model->GetEmailTemplates();				//echo '<pre>'; print_r($data['exhibition_city']); die;					$session_data = $this->session->userdata('admin_user');		    $data['username'] = $session_data['admin_username'];		    $header['main_page'] = 'send_bulk_sms';		    $header['tab'] = 'bulk';		    $header['username'] =  $data['username'];		    $sidebar['page'] = 'send_bulk_sms';		    $sidebar['main_page'] = 'send_bulk_sms';		    $sidebar['username'] =  $data['username'];		    		    $footer['main_page'] = 'send_bulk_sms';						 if($_SERVER['REQUEST_METHOD']=='POST')			 {				$this->form_validation->set_rules('sms', 'SMS', 'required');								if($this->input->post('type')=='register user'){					$this->form_validation->set_rules('city', 'City', 'required');				}								if ($this->form_validation->run() == FALSE){									$this->load->view('admin/parts/header',$header);					$this->load->view('admin/parts/sidebar_left',$sidebar);					$this->load->view('admin/bulk_email/send_bulk_sms',$data);					$this->load->view('admin/parts/footer',$footer);							}else{										if($this->input->post('type') == "upload file"){				 				// echo "Test new"; die;				 $csvrecipients = '';				 					 if($_FILES['emailFile']['name']){							$arrFileName = explode('.',$_FILES['emailFile']['name']);						if($arrFileName[1] == 'csv'){							$handle = fopen($_FILES['emailFile']['tmp_name'], "r");												$i = 0;									 						 while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {										//print_r($data);						$num = count($data); 								if($i==0) { $i++; continue; }  // to exclude first row in the csv file.									 						// $recipients = '';						 for ($c=0; $c < $num; $c++) 						 {							  $col[$c] = $data[$c];							  $csvrecipients.= $col[$c].","; 							  							  $text = $this->input->post('sms');																														$mob_no = trim($csvrecipients);																$url = "http://www.myvaluefirst.com/smpp/sendsms&username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk";								//echo "http://www.myvaluefirst.com/smpp/sendsms&username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk"; die;																$ch = curl_init();                  								curl_setopt($ch, CURLOPT_URL,$url);								curl_setopt($ch, CURLOPT_POST, true); 								curl_setopt($ch, CURLOPT_POSTFIELDS, "username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk"); // define what you want to post								curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 								$output123 = curl_exec ($ch);								curl_close ($ch);								// $temp = false;						  }						} 						fclose($handle);											} 				}																$this->session->set_flashdata('success', 'SMS Sent successfully!.');				redirect('admin/email_template/send_bulk_email');										 }elseif($this->input->post('type') == "register user"){								$cityId = $this->input->post('city');								$online_user_data = $this->register_model->get_online_register_user_by_city($cityId);				$city_user_data = $this->register_model->get_city_register_user_by_city($cityId);				$exhibitior_user_data = $this->register_model->get_exhibitor_register_user_by_city($cityId);								$usersArr = array();				$users = '';								if(sizeof($online_user_data) > 0){										foreach($online_user_data as $online_user){						$usersArr[] = $online_user->mobile;					}				}								if(sizeof($city_user_data) > 0){										foreach($city_user_data as $city_user){						$usersArr[] = $city_user->mobile;					}				}								if(sizeof($exhibitior_user_data) > 0){										foreach($exhibitior_user_data as $exhibitior_user){						$usersArr[] = $exhibitior_user->contact;					}				}			//	echo '<pre>'; print_r($usersArr); die;				if(sizeof($usersArr) > 0){					$usersArr = array_unique($usersArr);					$users = implode(',', $usersArr);					$userJson = json_encode($usersArr);				}								$sms_history = array(						'message' => $this->input->post('sms'),						'recipients' => $userJson,						'created' => date('Y-m-d H:i:s'),											);									$insert_id = $this->emailtemplates_model->add_bulk_sms_data($sms_history);										if($users !=""){										/* $username = $smsDetail['8']->option_value;					$password = $smsDetail['9']->option_value; */					$mobile = "";					foreach($usersArr as $userData){						$text = $this->input->post('sms');												if(isset($userData->mobile)){							$mobile = $userData->mobile;						}elseif($userData->contact){							$mobile = $userData->contact;						}												$mob_no = trim($mobile);												$url = "http://www.myvaluefirst.com/smpp/sendsms&username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk";						//echo "http://www.myvaluefirst.com/smpp/sendsms&username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk"; die;												$ch = curl_init();                  						curl_setopt($ch, CURLOPT_URL,$url);						curl_setopt($ch, CURLOPT_POST, true); 						curl_setopt($ch, CURLOPT_POSTFIELDS, "username=$username&password=$password&to=$mob_no&from=$sender_id&text=$text&dlr-url=&category=bulk"); // define what you want to post						curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 						$output123 = curl_exec ($ch);						curl_close ($ch);					}									}else{										$this->session->set_flashdata('error', 'No any recepients found!');					redirect('admin/email_template/send_bulk_sms');				}								//echo '<pre>'; print_r($usersArr); die;			 }			}											 }else{				 					$this->load->view('admin/parts/header',$header);					$this->load->view('admin/parts/sidebar_left',$sidebar);					$this->load->view('admin/bulk_email/send_bulk_sms',$data);					$this->load->view('admin/parts/footer',$footer);			 }	}		function sendEmail($to,$from,$subject,$message){		$config['mailtype'] = 'html';		$this->email->initialize($config);		$this->email->to($to);		$this->email->from($from,$this->config->item('Site_name'));		$this->email->subject($subject);		$this->email->message($message);						if($this->email->send()){			return true;		}else{			return false;					}	}				function bulk_email_history()	{		    		$session_data = $this->session->userdata('admin_user');		    $data['username'] = $session_data['admin_username'];			$header['main_page'] = 'bulk_email_list';		    $header['tab'] = 'bulk';		    $header['username'] =  $data['username'];		    $sidebar['page'] = 'bulk';		    $sidebar['main_page'] = 'bulk_email_list';		    $sidebar['username'] =  $data['username'];		    		    $footer['main_page'] = 'bulk_email_list';		   $data['email_history'] = $this->emailtemplates_model->get_bulk_email_history();		  // echo '<pre>'; print_r($data['email_history']); die;			$this->load->view('admin/parts/header',$header);			$this->load->view('admin/parts/sidebar_left',$sidebar);			$this->load->view('admin/bulk_email/bulk_email_history',$data);			$this->load->view('admin/parts/footer',$footer);    		}				 function editor($path,$width) {    //Loading Library For Ckeditor    $this->load->library('ckeditor');    $this->load->library('ckFinder');    //configure base path of ckeditor folder     $this->ckeditor->basePath = base_url().'/assets/admin/js/ckeditor/';    $this->ckeditor-> config['toolbar'] = 'Full';		$this->ckeditor-> config['allowedContent'] = 'true';	$this->ckeditor-> config['removeFormatAttributes'] = '';     $this->ckeditor->config['language'] = 'en';    $this->ckeditor-> config['width'] = $width;    //configure ckfinder with ckeditor config     $this->ckfinder->SetupCKEditor($this->ckeditor,$path);   }	//end by aglram}?>